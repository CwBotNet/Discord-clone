generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url = env("DATABASE_URL")
  relationMode = "prisma"
}

// user profile model

model Profile{
  id String @id @default(uuid())
  userId String @unique
  imageUrl String @db.Text
  email String @db.Text

  severs Server[]
  members Member[]
  channels Channel[]

  cretedAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

// server ceation model
model Server{
  id String @id @default(uuid())
  name String
  imageUrl String @db.Text
  inviteCode String @db.Text

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  members Member[]
  channels Channel[]
  cretedAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
}

//channel mamber roles
enum MemberRole{
  ADMIN
  MODERATOR
  GUEST  
}

//member of the server model
model Member{
  id String @id @default(uuid())
  role MemberRole @default(GUEST)

  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)
  
  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}

// channel sub channel type
enum ChannelType{
  TEXT
  AUDIO
  VIDEO
  GENERAL
}

// channel model
model Channel{
  Id String @id @default(uuid())
  name String
  type ChannelType @default(TEXT)

  // relation
  profileId String
  profile Profile @relation(fields: [profileId], references: [id], onDelete: Cascade)

  serverId String
  server Server @relation(fields: [serverId], references: [id], onDelete: Cascade)

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([profileId])
  @@index([serverId])
}